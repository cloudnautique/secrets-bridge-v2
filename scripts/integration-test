#!/bin/bash

set -e -x

cd $(dirname $0)/..

export VAULT_ROOT_TOKEN_ID="password"

#export VAULT_TOKEN=${VAULT_ROOT_TOKEN_ID}
#export VAULT_ADDR=http://127.0.0.1:8200

rancher_server_container=$(docker run -d -p 8080 rancher/server:latest)
trap "docker rm -f -v ${rancher_server_container}" EXIT KILL TERM

/usr/bin/vault server -dev -dev-root-token-id=${VAULT_ROOT_TOKEN_ID} &
sleep 3

wire_vault()
{
    export VAULT_ADDR="${1}"
    export VAULT_TOKEN=${VAULT_ROOT_TOKEN_ID}

    vault write auth/token/roles/demo allowed_policies=default
}

get_token()
{
    export VAULT_ADDR="${1}"
    export VAULT_TOKEN=${VAULT_ROOT_TOKEN_ID}

    if [ "${2}" = "true" ]; then
        export OPTS=-metadata="storage_dir=/secret/rancher"
    fi

    echo $(/usr/bin/vault token-create ${OPTS} -format=json| jq -r '.auth.client_token')
}

get_rancher_url()
{
    port=$(docker inspect -f '{{index (index (index .NetworkSettings.Ports "8080/tcp") 0) "HostPort"}}' ${rancher_server_container})
    ip=$(docker inspect -f '{{.NetworkSettings.Networks.bridge.IPAddress}}' ${rancher_server_container})

    echo "http://${ip}:${port}"
}

start_rancher_agent()
{
    docker run -d --privileged docker:1.12.6-dind docker run -it -v /var/lib/rancher:/var/lib/rancher --privileged rancher/agent:latest ${1}
}

# Normal ephemeral storage
wire_vault "http://127.0.0.1:8200"
rancher_url=$(get_rancher_url)

./bin/vault-volume-driver -d server --vault-url http://127.0.0.1:8200 --vault-role demo --vault-token ${VAULT_ROOT_TOKEN_ID} --rancher-url ${rancher_url}&

start_rancher_agent $rancher_url

cd integration
python --version

find -depth -name __pycache__ -o -name "*.pyc" -exec rm -rf {} \;
if [ -z "$NO_TEST" ]; then
    tox "$@"
fi
